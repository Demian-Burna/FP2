services:
  # Backend API (Free Tier - Sin base de datos de Render)
  - type: web
    name: finance-manager-api
    env: python
    buildCommand: |
      cd backend &&
      pip install -r requirements.txt &&
      python manage.py collectstatic --noinput &&
      python manage.py migrate &&
      python manage.py loaddata fixtures/initial_data.json
    startCommand: |
      cd backend &&
      gunicorn --bind 0.0.0.0:$PORT finance_manager.wsgi:application
    healthCheckPath: /api/
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: finance_manager.settings
      - key: SECRET_KEY
        generateValue: true
      - key: DEBUG
        value: false
      - key: ALLOWED_HOSTS
        value: finance-manager-api.onrender.com,localhost,127.0.0.1
      - key: SUPABASE_URL
        sync: false
      - key: SUPABASE_KEY
        sync: false
      - key: SUPABASE_SECRET
        sync: false
      - key: EXCHANGE_API_KEY
        sync: false
      - key: FRONTEND_URL
        value: https://finance-manager-frontend.onrender.com
      # Base de datos externa (Supabase PostgreSQL)
      - key: DATABASE_URL
        sync: false

  # Frontend React (Free Static Site)
  - type: static_site
    name: finance-manager-frontend
    env: static
    buildCommand: |
      cd frontend &&
      npm ci &&
      npm run build
    staticPublishPath: frontend/dist
    envVars:
      - key: VITE_API_URL
        value: https://finance-manager-api.onrender.com/api
      - key: VITE_SUPABASE_URL
        sync: false
      - key: VITE_SUPABASE_ANON_KEY
        sync: false

# NOTA: No se crean bases de datos en Render para usar solo el plan gratuito
# La base de datos PostgreSQL se maneja externamente con Supabase:
# 1. Crear proyecto en https://supabase.com (gratuito)
# 2. Obtener el connection string de PostgreSQL
# 3. Configurar DATABASE_URL manualmente en las variables de entorno del servicio
#
# Formato del connection string de Supabase:
# postgresql://postgres:[PASSWORD]@db.[PROJECT_REF].supabase.co:5432/postgres
#
# Redis y Cron Jobs no est√°n disponibles en el plan gratuito de Render.
# Alternativas gratuitas para jobs programados:
# - GitHub Actions con cron schedules
# - Servicios externos como EasyCron (plan gratuito)
# - Webhooks programados desde el frontend